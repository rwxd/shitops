<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Technical Solutions for the 10X Engineers</title><link>https://shitops.de/tags/golang/</link><description>Recent content in Golang on Technical Solutions for the 10X Engineers</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 18 Mar 2024 00:10:29 +0000</lastBuildDate><atom:link href="https://shitops.de/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Revolutionizing Deployment with Golang and Ethereum Smart Contracts</title><link>https://shitops.de/posts/revolutionizing-deployment-with-golang-and-ethereum-smart-contracts/</link><pubDate>Mon, 18 Mar 2024 00:10:29 +0000</pubDate><guid>https://shitops.de/posts/revolutionizing-deployment-with-golang-and-ethereum-smart-contracts/</guid><description>&lt;p>Listen to the interview with our engineer: &lt;figure class="audio">
&lt;audio controls preload="metadata">
&lt;source src="https://s3.chaops.de/shitops/podcasts/revolutionizing-deployment-with-golang-and-ethereum-smart-contracts.mp3" type="audio/mpeg">

&lt;/audio>
&lt;/figure>
&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>At ShitOps, we constantly strive to push the boundaries of technology and revolutionize the way we approach deployment processes. In this blog post, we will delve into a groundbreaking solution that leverages the power of Golang and Ethereum smart contracts to streamline our deployment pipelines.&lt;/p>
&lt;h2 id="the-problem">The Problem&lt;/h2>
&lt;p>One of the key challenges we have faced at ShitOps is the lack of transparency and security in our deployment process. Our existing methods rely on traditional CI/CD tools like GitLab, which can be vulnerable to unauthorized access and malicious attacks. Additionally, the manual intervention required for deploying updates has led to inefficiencies and delays in our release cycles.&lt;/p></description></item></channel></rss>